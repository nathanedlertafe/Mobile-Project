{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { MyButton } from \"../components/MyButton\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Settings from \"../constants/Settings\";\nimport { TextParagraph, TextH1, TextH2, TextH3, TextListItem } from \"../components/StyledText\";\nimport Styles from \"../styles/MainStyle\";\nimport Colours from \"../constants/Colours\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HelpScreen(props) {\n  var _React$useState = React.useState(Settings.fontSizeModifier),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    fontSizeModifier = _React$useState2[0],\n    setFontSizeModifier = _React$useState2[1];\n  function changeFontSize(sizeModifier) {\n    Settings.fontSizeModifier += sizeModifier;\n    setFontSizeModifier(Settings.fontSizeModifier);\n  }\n  return _jsx(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: _jsx(ScrollView, {\n      style: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: _jsxs(View, {\n        children: [_jsx(TextH1, {\n          style: {\n            marginTop: 0\n          },\n          children: \"Help topics\"\n        }), _jsx(TextH2, {\n          children: \"Sample content\"\n        }), _jsx(TextParagraph, {\n          children: \"Here is some sample content for a help topic (or just any set of static text for the screen).\"\n        }), _jsx(TextH2, {\n          children: \"Custom components\"\n        }), _jsx(TextParagraph, {\n          children: \"You can add all of your own content and structure for these screens, making use of the customised text components from components/StyledText.\"\n        }), _jsx(TextH3, {\n          children: \"Custom text components:\"\n        }), _jsx(TextListItem, {\n          children: \"MonoText - Monospaced font (Space Mono)\"\n        }), _jsx(TextListItem, {\n          children: \"TextH1 - heading 1\"\n        }), _jsx(TextListItem, {\n          children: \"TextH2 - heading 2\"\n        }), _jsx(TextListItem, {\n          children: \"TextH3 - heading 3\"\n        }), _jsx(TextListItem, {\n          children: \"TextParagraph - paragraph\"\n        }), _jsx(TextListItem, {\n          children: \"TextListItem - bullet list item\"\n        }), _jsx(TextListItem, {\n          children: \"TextLabel - form label (inline with input)\"\n        }), _jsx(TextH2, {\n          children: \"Wanna go home?\"\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            return props.navigation.replace('Root');\n          },\n          children: _jsx(TextParagraph, {\n            style: {\n              marginVertical: 10,\n              color: Colours.tabLabelSelected\n            },\n            children: \"Click here to go home...\"\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["MyButton","React","View","ScrollView","Pressable","SafeAreaView","Settings","TextParagraph","TextH1","TextH2","TextH3","TextListItem","Styles","Colours","jsx","_jsx","jsxs","_jsxs","HelpScreen","props","_React$useState","useState","fontSizeModifier","_React$useState2","_slicedToArray","setFontSizeModifier","changeFontSize","sizeModifier","style","safeAreaView","children","container","contentContainerStyle","contentContainer","marginTop","onPress","navigation","replace","marginVertical","color","tabLabelSelected"],"sources":["C:/project/Mobile-Project/screens/HelpScreen.js"],"sourcesContent":["import { MyButton } from '../components/MyButton';\r\nimport * as React from 'react';\r\nimport { View, ScrollView, Pressable } from 'react-native';\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n\r\n// Import helper code\r\nimport Settings from '../constants/Settings';\r\n\r\n// Import styling and components\r\nimport { TextParagraph, TextH1, TextH2, TextH3, TextListItem } from \"../components/StyledText\";\r\nimport Styles from \"../styles/MainStyle\";\r\nimport Colours from '../constants/Colours';\r\n\r\nexport default function HelpScreen(props) {\r\n// State management\r\n\r\nconst [fontSizeModifier, setFontSizeModifier] = React.useState(Settings.fontSizeModifier);\r\n\r\n// changeFontSize(-0.1)\r\nfunction changeFontSize(sizeModifier) {\r\n  // TODO: validate the font size (e.g. not negative)\r\n\r\n  // Update the global settings value\r\n  Settings.fontSizeModifier += sizeModifier;\r\n\r\n  // Update the state variable to re-render the screen (update the UI)\r\n  setFontSizeModifier(Settings.fontSizeModifier);\r\n}\r\n  return (\r\n    <SafeAreaView style={Styles.safeAreaView}>\r\n      <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\r\n\r\n        <View>\r\n          \r\n          <TextH1 style={{marginTop:0}}>Help topics</TextH1>\r\n\r\n          <TextH2>Sample content</TextH2>\r\n\r\n          <TextParagraph>Here is some sample content for a help topic (or just any set of static text for the screen).</TextParagraph>\r\n\r\n          <TextH2>Custom components</TextH2>\r\n\r\n          <TextParagraph>You can add all of your own content and structure for these screens, making use of the customised text components from components/StyledText.</TextParagraph>\r\n\r\n          <TextH3>Custom text components:</TextH3>\r\n\r\n          <TextListItem>MonoText - Monospaced font (Space Mono)</TextListItem>\r\n          <TextListItem>TextH1 - heading 1</TextListItem>\r\n          <TextListItem>TextH2 - heading 2</TextListItem>\r\n          <TextListItem>TextH3 - heading 3</TextListItem>\r\n          <TextListItem>TextParagraph - paragraph</TextListItem>\r\n          <TextListItem>TextListItem - bullet list item</TextListItem>\r\n          <TextListItem>TextLabel - form label (inline with input)</TextListItem>\r\n\r\n          <TextH2>Wanna go home?</TextH2>\r\n\r\n          <Pressable onPress={() => props.navigation.replace('Root')}>\r\n            <TextParagraph style={{marginVertical: 10, color: Colours.tabLabelSelected}}>Click here to go home...</TextParagraph>\r\n          </Pressable>\r\n\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}"],"mappings":";AAAA,SAASA,QAAQ;AACjB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAE/B,SAASC,YAAY,QAAQ,gCAAgC;AAG7D,OAAOC,QAAQ;AAGf,SAASC,aAAa,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,YAAY;AAC5D,OAAOC,MAAM;AACb,OAAOC,OAAO;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE3C,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EAG1C,IAAAC,eAAA,GAAgDnB,KAAK,CAACoB,QAAQ,CAACf,QAAQ,CAACgB,gBAAgB,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAJ,eAAA;IAAlFE,gBAAgB,GAAAC,gBAAA;IAAEE,mBAAmB,GAAAF,gBAAA;EAG5C,SAASG,cAAcA,CAACC,YAAY,EAAE;IAIpCrB,QAAQ,CAACgB,gBAAgB,IAAIK,YAAY;IAGzCF,mBAAmB,CAACnB,QAAQ,CAACgB,gBAAgB,CAAC;EAChD;EACE,OACEP,IAAA,CAACV,YAAY;IAACuB,KAAK,EAAEhB,MAAM,CAACiB,YAAa;IAAAC,QAAA,EACvCf,IAAA,CAACZ,UAAU;MAACyB,KAAK,EAAEhB,MAAM,CAACmB,SAAU;MAACC,qBAAqB,EAAEpB,MAAM,CAACqB,gBAAiB;MAAAH,QAAA,EAElFb,KAAA,CAACf,IAAI;QAAA4B,QAAA,GAEHf,IAAA,CAACP,MAAM;UAACoB,KAAK,EAAE;YAACM,SAAS,EAAC;UAAC,CAAE;UAAAJ,QAAA,EAAC;QAAW,CAAQ,CAAC,EAElDf,IAAA,CAACN,MAAM;UAAAqB,QAAA,EAAC;QAAc,CAAQ,CAAC,EAE/Bf,IAAA,CAACR,aAAa;UAAAuB,QAAA,EAAC;QAA6F,CAAe,CAAC,EAE5Hf,IAAA,CAACN,MAAM;UAAAqB,QAAA,EAAC;QAAiB,CAAQ,CAAC,EAElCf,IAAA,CAACR,aAAa;UAAAuB,QAAA,EAAC;QAA6I,CAAe,CAAC,EAE5Kf,IAAA,CAACL,MAAM;UAAAoB,QAAA,EAAC;QAAuB,CAAQ,CAAC,EAExCf,IAAA,CAACJ,YAAY;UAAAmB,QAAA,EAAC;QAAuC,CAAc,CAAC,EACpEf,IAAA,CAACJ,YAAY;UAAAmB,QAAA,EAAC;QAAkB,CAAc,CAAC,EAC/Cf,IAAA,CAACJ,YAAY;UAAAmB,QAAA,EAAC;QAAkB,CAAc,CAAC,EAC/Cf,IAAA,CAACJ,YAAY;UAAAmB,QAAA,EAAC;QAAkB,CAAc,CAAC,EAC/Cf,IAAA,CAACJ,YAAY;UAAAmB,QAAA,EAAC;QAAyB,CAAc,CAAC,EACtDf,IAAA,CAACJ,YAAY;UAAAmB,QAAA,EAAC;QAA+B,CAAc,CAAC,EAC5Df,IAAA,CAACJ,YAAY;UAAAmB,QAAA,EAAC;QAA0C,CAAc,CAAC,EAEvEf,IAAA,CAACN,MAAM;UAAAqB,QAAA,EAAC;QAAc,CAAQ,CAAC,EAE/Bf,IAAA,CAACX,SAAS;UAAC+B,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMhB,KAAK,CAACiB,UAAU,CAACC,OAAO,CAAC,MAAM,CAAC;UAAA,CAAC;UAAAP,QAAA,EACzDf,IAAA,CAACR,aAAa;YAACqB,KAAK,EAAE;cAACU,cAAc,EAAE,EAAE;cAAEC,KAAK,EAAE1B,OAAO,CAAC2B;YAAgB,CAAE;YAAAV,QAAA,EAAC;UAAwB,CAAe;QAAC,CAC5G,CAAC;MAAA,CAER;IAAC,CACG;EAAC,CACD,CAAC;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}